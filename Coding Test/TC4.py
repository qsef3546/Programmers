# 4.solution 함수에 parameter가 자동으로 넘어옵니다.
# solution 함수만 작성하시면 됩니다. (추가 함수 정의 가능)
# 주형이의 배달의 민족
# 문제
# 주형이는 신안 소금 염전에서 소금을 배달하고 있다. 주형이는 지금 소금가게에 소금을 정확하게 N킬로그램을 배달해야 한다.
# 소금 염전에서 만드는 소금은 봉지에 담겨져 있다. 소금 봉지는 3킬로그램 봉지와 5킬로그램 봉지가 있다.
# 주형이는 귀찮기 때문에, 최대한 적은 봉지를 들고 가려고 한다. 예를 들어, 18킬로그램 소금을 배달해야 할 때,
# 3킬로그램 봉지 6개를 가져가도 되지만, 5킬로그램 3개와 3킬로그램 1개를 배달하면, 더 적은 개수의 봉지를 배달할 수 있다.
# 주형이가 소금을 정확하게 N킬로그램 배달해야 할 때, 봉지 몇 개를 가져가면 되는지 그 수를 구하는 프로그램을 작성하시오.
# 입력
# 첫째 줄에 N이 주어진다. (3 ≤ N ≤ 5000)
# 출력
# 상근이가 배달하는 봉지의 최소 개수를 출력한다. 만약, 정확하게 N킬로그램을 만들 수 없다면 -1을 출력한다.

def solution(solt, bA, bB):

    res = []
    for i in [x for x in range(solt//bA+1)]:
        if (solt - bA*i) % bB == 0:
            res.append((solt - bA * i)//bB + i)
    return min(res) if res else -1


solt = 23
bA = 7
bB = 5

answer = solution(solt, bA, bB)
print('answer = ', answer)