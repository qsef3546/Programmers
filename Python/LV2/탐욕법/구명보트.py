# 무인도에 갇힌 사람들을 구명보트를 이용하여 구출하려고 합니다. 구명보트는 작아서 한 번에 최대 2명씩 밖에 탈 수 없고, 무게 제한도 있습니다.
#
# 예를 들어, 사람들의 몸무게가 [70kg, 50kg, 80kg, 50kg]이고 구명보트의 무게 제한이 100kg이라면 2번째 사람과 4번째 사람은 같이 탈 수 있지만
# 1번째 사람과 3번째 사람의 무게의 합은 150kg이므로 구명보트의 무게 제한을 초과하여 같이 탈 수 없습니다.
#
# 구명보트를 최대한 적게 사용하여 모든 사람을 구출하려고 합니다.
#
# 사람들의 몸무게를 담은 배열 people과 구명보트의 무게 제한 limit가 매개변수로 주어질 때, 모든 사람을 구출하기 위해 필요한 구명보트 개수의
# 최솟값을 return 하도록 solution 함수를 작성해주세요.

def solution(people, limit):
    answer = 0
    people.sort()
    w = 0  #앞지점 위치 최저 몸무게 사람 순
    h = len(people)-1 #끝지점 위치 최고 몸무게 사람 순
    while h >= w: #끝지점이 앞지점보다 더 전이면 이미 비교한 대상이다
        if w == h: #앞지점과 끝지점 위치가 같을경우 같은 위치에 있다는 것. 즉, 구명보트에 태울 사람이 1명밖에 없다는 것이다.
            answer += 1
            break
        if people[h] + people[w] <= limit: # h 번째 무거운 사람과 w 번째 가벼운 사람 몸무게 총합이 limit을 넘지 않을경우 둘을 한 번에 구명보트에 태울 수 있다. 
            w += 1 # 앞지점 이동
        h -= 1 # 끝지점 이동
        answer += 1 # 사용한 보트 수 증가

    return answer

people = [70, 50, 80, 50]
# people = [30, 40, 70, 60, 50]
limit = 100

answer = solution(people, limit)
