# 문제 설명
# 자연수 n 개로 이루어진 중복 집합(multi set, 편의상 이후에는 "집합"으로 통칭) 중에 다음 두 조건을 만족하는 집합을 최고의 집합이라고 합니다.
#
# 각 원소의 합이 S가 되는 수의 집합
# 위 조건을 만족하면서 각 원소의 곱 이 최대가 되는 집합
# 예를 들어서 자연수 2개로 이루어진 집합 중 합이 9가 되는 집합은 다음과 같이 4개가 있습니다.
# { 1, 8 }, { 2, 7 }, { 3, 6 }, { 4, 5 }
# 그중 각 원소의 곱이 최대인 { 4, 5 }가 최고의 집합입니다.
#
# 집합의 원소의 개수 n과 모든 원소들의 합 s가 매개변수로 주어질 때, 최고의 집합을 return 하는 solution 함수를 완성해주세요.

def solution(n, s):
    answer = []
    p = s//n  # 몫
    q = s%n   # 나머지
    if p == 0: #몫이 0이라면 합인 S를 구할 수 없음
        answer.append(-1)
    elif q == 0:  #나머지가 0이라면 S= 3p이다.
        answer += [p] * n
    else :
        answer += [p] * (n-q)  #n개의 수 - 나머지 수 (q) 는 p로
        answer += [p+1] * q    #나머지 수 만큼 p 를 +1 한다.
    #S=10 , n = 3일때
    # p = s/n = 3
    # q = s%n = 1
    # n의 수 는 3이므로 기본 [3,3,3] 인상 태에서 나머지 수를 원소 개수로 생각하여 q개의 원소만 +1 해주면 된다.
    # 즉 [3,3,3+1] 을하면 합이 S이며 모든 곱의 최대합이 나올 수 있다.

    return answer


n =2
s = 1
result = solution(n, s)
print('result = ',result)